<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tests.Cli</name>
    </assembly>
    <members>
        <member name="T:Tests.Cli.CliTestBase">
            <summary>
            Represents a test configuration that provides command line infrastructure.
            </summary>
        </member>
        <member name="M:Tests.Cli.CliTestBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tests.Cli.CliTestBase"/> class.
            </summary>
        </member>
        <member name="P:Tests.Cli.CliTestBase.ServiceCollection">
            <summary>
            Gets the service collection.
            </summary>
        </member>
        <member name="P:Tests.Cli.CliTestBase.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
        </member>
        <member name="M:Tests.Cli.CliTestBase.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Tests.Cli.CliTestBase.Dispose(System.Boolean)">
            <summary>
            Releases resources when they are no longer required.
            </summary>
            <param name="disposing">A value indicating whether the method call comes from a dispose method (its value is <c>true</c>) or from a finalizer (its value is <c>false</c>).</param>
        </member>
        <member name="T:Tests.Cli.ListCommandTests">
            <summary>
            Represents integration tests for list functionality.
            </summary>
        </member>
        <member name="M:Tests.Cli.ListCommandTests.PathAndJsonShouldWork">
            <summary>
            Verifies listing user rights to a JSON file.
            </summary>
        </member>
        <member name="M:Tests.Cli.ListCommandTests.PathShouldWork">
            <summary>
            Verifies listing user rights to a CSV file.
            </summary>
        </member>
        <member name="T:Tests.Cli.ListSyntaxTests">
            <summary>
            Represents syntax tests for list functionality.
            </summary>
        </member>
        <member name="M:Tests.Cli.ListSyntaxTests.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tests.Cli.ListSyntaxTests"/> class.
            </summary>
        </member>
        <member name="M:Tests.Cli.ListSyntaxTests.CsvToStdoutShouldWork">
            <summary>
            Verifies list mode with CSV formatted output sent to STDOUT is parsed successfully.
            </summary>
        </member>
        <member name="M:Tests.Cli.ListSyntaxTests.CsvToPathShouldWork">
            <summary>
            Verifies list mode with CSV formatted output sent to a file is parsed successfully.
            </summary>
        </member>
        <member name="M:Tests.Cli.ListSyntaxTests.PathWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace path is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.ListSyntaxTests.SystemNameWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace system name is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.ListSyntaxTests.JsonToStdoutShouldWork">
            <summary>
            Verifies list mode with JSON formatted output sent to STDOUT is parsed successfully.
            </summary>
        </member>
        <member name="M:Tests.Cli.ListSyntaxTests.JsonToPathShouldWork">
            <summary>
            Verifies list mode with JSON formatted output sent to a file is parsed successfully.
            </summary>
        </member>
        <member name="T:Tests.Cli.PrincipalCommandTests">
            <summary>
            Represents integration tests for modify principal functionality.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalCommandTests.GrantAndRevokeOthersShouldWork">
            <summary>
            Verifies a granting a privilege to a principal and revoking their other privileges is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalCommandTests.GrantAndRevokeShouldWork">
            <summary>
            Verifies a single grant with a single revoke is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalCommandTests.GrantShouldWork">
            <summary>
            Verifies a single grant is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalCommandTests.RevokeAllShouldWork">
            <summary>
            Verifies a revoking all privileges for a principal is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalCommandTests.RevokeShouldWork">
            <summary>
            Verifies a single revocation is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="T:Tests.Cli.PrincipalSyntaxTests">
            <summary>
            Represents syntax tests for principal functionality.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tests.Cli.PrincipalSyntaxTests"/> class.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.GrantAndRevokeShouldWork">
            <summary>
            Ensures granting a privilege and revoking a different privilege is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.GrantMultipleShouldWork">
            <summary>
            Ensures granting multiple privileges is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.GrantShouldWork">
            <summary>
            Ensures granting a privilege is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.GrantWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace grant is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.GrantWithRevokeAllThrowsException">
            <summary>
            Ensures granting a privilege and revoking all other privileges is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.NoOptionsThrowsException">
            <summary>
            Ensures specifying no options is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.OverlappingGrantsAndRevokesThrowsException(System.String[])">
            <summary>
            Ensures overlapping or duplicate privileges is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.PrincipalWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace principal is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeAllShouldWork">
            <summary>
            Ensures revoking all privileges is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeAllWithGrantsThrowsException">
            <summary>
            Ensures granting a privilege and granting all privileges is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeAllWithRevocationsThrowsException">
            <summary>
            Ensures revoking a privilege and revoking all privileges is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeAllWithRevokeOthersThrowsException">
            <summary>
            Ensures revoking all privileges and revoking other privileges is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeMultipleShouldWork">
            <summary>
            Ensures revoking multiple privileges is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeOthersWithOutGrantsThrowsException">
            <summary>
            Ensures revoke other privileges without granting a privilege is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeOthersWithRevocationsThrowsException">
            <summary>
            Ensures revoke other privileges with revoking a privilege is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeShouldWork">
            <summary>
            Ensures revoking a privilege is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.RevokeWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace revocation is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrincipalSyntaxTests.SystemNameWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace system name is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="T:Tests.Cli.PrivilegeCommandTests">
            <summary>
            Represents integration tests for modify privilege functionality.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeCommandTests.GrantAndRevokeOthersShouldWork">
            <summary>
            Verifies granting a principal to a privilege and revoking its other principals is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeCommandTests.GrantAndRevokePasses">
            <summary>
            Verifies a single grant with a single revoke is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeCommandTests.GrantAndRevokePatternPasses">
            <summary>
            Verifies granting a principal to a privilege and revoking all principals matching a pattern is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeCommandTests.GrantPasses">
            <summary>
            Verifies a single grant is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeCommandTests.RevokeAllPasses">
            <summary>
            Verifies revoking all principals for a privilege is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeCommandTests.RevokePasses">
            <summary>
            Verifies a single revocation is successful and does not modify other assignments.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeCommandTests.RevokePatternForAllButBuiltinAndVirtualPasses">
            <summary>
            Verifies revoking all non builtin and virtual principals from a privilege is successful.
            </summary>
        </member>
        <member name="T:Tests.Cli.PrivilegeSyntaxTests">
            <summary>
            Represents syntax tests for privilege functionality.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tests.Cli.PrivilegeSyntaxTests"/> class.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.GrantAndRevokeShouldWork">
            <summary>
            Ensures granting a context and revoking a different context is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.GrantMultipleShouldWork">
            <summary>
            Ensures granting multiple contexts is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.GrantShouldWork">
            <summary>
            Ensures granting a context is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.GrantWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace grant is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.GrantWithRevokeAllThrowsException">
            <summary>
            Ensures granting a context and revoking all contexts is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.NoOptionsThrowsException">
            <summary>
            Ensures specifying no options is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.OverlappingGrantsAndRevokesThrowsException(System.String[])">
            <summary>
            Ensures overlapping or duplicate contexts is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.PrivilegeWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace principal is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeAllShouldWork">
            <summary>
            Ensures revoking all contexts is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeAllWithGrantsThrowsException">
            <summary>
            Ensures granting a context and revoking all contexts is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeAllWithRevocationsThrowsException">
            <summary>
            Ensures revoking a context and revoking all contexts is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeAllWithRevokeOthersThrowsException">
            <summary>
            Ensures revoking all contexts and revoking other contexts is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeMultipleShouldWork">
            <summary>
            Ensures revoking multiple contexts is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeOthersWithOutGrantsThrowsException">
            <summary>
            Ensures revoke other contexts without granting a context is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeOthersWithRevocationsThrowsException">
            <summary>
            Ensures revoke other contexts with revoking a context is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternShouldWork">
            <summary>
            Ensures revoking a valid pattern is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternWithGrantShouldWork">
            <summary>
            Ensures granting a context and revoking a valid pattern is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternWithValidRegexShouldWork(System.String[])">
            <summary>
            Ensures revoking a valid regex is accepted.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternWithRevokeAllThrowsException">
            <summary>
            Ensures revoking a pattern and revoking all contexts is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternWithRevokeOthersThrowsException">
            <summary>
            Ensures revoking a pattern and revoking other contexts is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternWithRevokeThrowsException">
            <summary>
            Ensures revoking a pattern and revoking a context is rejected.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternWithInvalidRegexThrowsException(System.String[])">
            <summary>
            Ensures revoking an invalid regex is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokePatternWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace revocation pattern is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeShouldWork">
            <summary>
            Ensures revoking a context is accepted.
            </summary>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.RevokeWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace revocation is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
        <member name="M:Tests.Cli.PrivilegeSyntaxTests.SystemNameWithInvalidStringThrowsException(System.String[])">
            <summary>
            Ensures an empty or whitespace system name is rejected.
            </summary>
            <param name="args">The test arguments.</param>
        </member>
    </members>
</doc>
